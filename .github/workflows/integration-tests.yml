name: Integration Tests Workflow

on:
  pull_request:
    branches: [master, development]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read

jobs:
  all-in-one:
    name: 'All-in-one (node: 22)'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install

      - name: Monorepo build
        uses: ./.github/actions/run-build

      - name: Install SQLite Dependencies
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

      # Copy each env.example -> .env and ensure trailing newline so the last line won't merge
      - name: Set up .env files for each integration test package
        shell: bash
        run: |
          set -euo pipefail
          find ./integration-tests -type f -name ".env.example" | while read -r example_env; do
            env_dir=$(dirname "$example_env")
            cp "$example_env" "$env_dir/.env"
            # ensure file ends with newline to prevent accidental concatenation
            printf '\n' >> "$env_dir/.env"
          done

      # Patch ONLY existing keys in .env with Secrets (skip if secret is empty; do NOT add keys)
      - name: Set environment variables (patch existing keys only)
        shell: bash
        run: |
          set -euo pipefail

          # Read secrets (masked in logs by GitHub)
          PROVIDER_NETWORK_RPC_URLS="${{ secrets.PROVIDER_NETWORK_RPC_URLS }}"

          # Escape / and & for sed
          esc() { printf '%s' "$1" | sed -e 's/[\/&]/\\&/g'; }

          # Iterate over all .env files and update ONLY if key exists and secret is non-empty
          find ./integration-tests -type f -name ".env" | while read -r env_file; do
            echo "Processing $env_file"

            if grep -qE "^PROVIDER_NETWORK_RPC_URLS=" "$env_file"; then
              if [ -n "$PROVIDER_NETWORK_RPC_URLS" ]; then
                sed -i "s|^PROVIDER_NETWORK_RPC_URLS=.*|PROVIDER_NETWORK_RPC_URLS=$(esc "$PROVIDER_NETWORK_RPC_URLS")|" "$env_file"
                echo "Updated PROVIDER_NETWORK_RPC_URLS in $env_file"
              else
                echo "Skip PROVIDER_NETWORK_RPC_URLS (secret empty)"
              fi
            else
              echo "Skip PROVIDER_NETWORK_RPC_URLS (key not present in $env_file)"
            fi
          done

      - name: ðŸ“¥ Run Integration Tests
        shell: bash
        run: yarn test:integration
