name: 'Create & Publish Prerelease'

on:
  workflow_dispatch:
    inputs:
      suffix:
        description: 'Version suffix for prerelease (e.g., alpha, beta)'
        required: true
        default: 'alpha'

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          tags: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies in current repository
        uses: ./.github/actions/yarn-nm-install

      - name: Run Prerelease Publish Packages Script
        id: publish_prerelease
        run: bash ./scripts/create-and-publish-prerelease.sh
        env:
          SUFFIX: ${{ github.event.inputs.suffix }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HUSKY: '0'
      
      - name: Create Git Tag if not exists
        run: |
          TAG="v${{ env.VERSION }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping tag creation."
          else
            echo "Create a tag $TAG."
            git tag "$TAG"
            git push origin "$TAG"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: |
          VERSION=$(node -p "require('./lerna.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Generate Release Notes from CHANGELOG.md
        id: notes
        run: |
          # Get the latest version section from CHANGELOG.md
          VERSION="${{ env.VERSION }}"
          TAG_HEADER="## <small>${VERSION} " 

          # Extract the section for the current version
          NOTES=$(sed -n "/^${TAG_HEADER}/,/^## <small>/p" CHANGELOG.md \
                  | sed '1d;$d' \
                  | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' )

          if [ -z "$NOTES" ]; then
            echo "‚ùå  Could not find changelog section for ${VERSION}"
            exit 1
          fi
          
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Prerelease
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          release_name: "v${{ env.VERSION }} (Prerelease)"
          draft: false
          prerelease: true
          body: ${{ steps.notes.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}